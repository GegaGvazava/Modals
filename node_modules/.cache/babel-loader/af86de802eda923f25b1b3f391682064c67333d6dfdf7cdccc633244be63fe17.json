{"ast":null,"code":"var _jsxFileName = \"/Users/gegagvazava/Downloads/UseRef-modals-main/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [info, setInfo] = useState({\n    index: 0,\n    buttonName: \"\",\n    top: 0,\n    left: 0,\n    visibility: \"none\"\n  });\n  const btnRef = useRef([]);\n  const handleButtonClick = (btnIndex, btnName, btnElement) => {\n    const {\n      top,\n      left\n    } = btnElement.getBoundingClientRect();\n    setInfo({\n      index: btnIndex,\n      buttonName: btnName,\n      top,\n      left,\n      visibility: \"block\"\n    });\n  };\n  const btnNames = [\"First\", \"Second\", \"Third\", \"Fourth\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: btnNames.map((btnName, btnIndex) => /*#__PURE__*/_jsxDEV(Button, {\n        text: btnName,\n        btnIndex: btnIndex,\n        refFunction: refElement => {\n          if (refElement) btnRef.current[btnIndex] = refElement;\n        },\n        onClick: () => handleButtonClick(btnIndex, btnName, btnRef.current[btnIndex])\n      }, btnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      text: info.buttonName,\n      top: info.top,\n      left: info.left,\n      visibility: info.visibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"fROoiVSkgglrJ885pvs+nSD8TLU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Button","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","info","setInfo","index","buttonName","top","left","visibility","btnRef","handleButtonClick","btnIndex","btnName","btnElement","getBoundingClientRect","btnNames","children","className","map","text","refFunction","refElement","current","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gegagvazava/Downloads/UseRef-modals-main/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\n\nfunction App() {\n  const [info, setInfo] = useState({\n    index: 0,\n    buttonName: \"\",\n    top: 0,\n    left: 0,\n    visibility: \"none\",\n  });\n  const btnRef = useRef([]);\n\n  const handleButtonClick = (btnIndex, btnName, btnElement) => {\n    const { top, left } = btnElement.getBoundingClientRect();\n    setInfo({\n      index: btnIndex,\n      buttonName: btnName,\n      top,\n      left,\n      visibility: \"block\",\n    });\n  };\n\n  const btnNames = [\"First\", \"Second\", \"Third\", \"Fourth\"];\n  return (\n    <>\n      <div className=\"button-container\">\n        {btnNames.map((btnName, btnIndex) => (\n          <Button\n            key={btnIndex}\n            text={btnName}\n            btnIndex={btnIndex}\n            refFunction={(refElement) => {\n              if (refElement) btnRef.current[btnIndex] = refElement;\n            }}\n            onClick={() =>\n              handleButtonClick(btnIndex, btnName, btnRef.current[btnIndex])\n            }\n          />\n        ))}\n      </div>\n      <Modal\n        text={info.buttonName}\n        top={info.top}\n        left={info.left}\n        visibility={info.visibility}\n      />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC/BY,KAAK,EAAE,CAAC;IACRC,UAAU,EAAE,EAAE;IACdC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAMC,MAAM,GAAGhB,MAAM,CAAC,EAAE,CAAC;EAEzB,MAAMiB,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,UAAU,KAAK;IAC3D,MAAM;MAAEP,GAAG;MAAEC;IAAK,CAAC,GAAGM,UAAU,CAACC,qBAAqB,CAAC,CAAC;IACxDX,OAAO,CAAC;MACNC,KAAK,EAAEO,QAAQ;MACfN,UAAU,EAAEO,OAAO;MACnBN,GAAG;MACHC,IAAI;MACJC,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC;EAED,MAAMO,QAAQ,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;EACvD,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAC9BD,QAAQ,CAACG,GAAG,CAAC,CAACN,OAAO,EAAED,QAAQ,kBAC9Bd,OAAA,CAACH,MAAM;QAELyB,IAAI,EAAEP,OAAQ;QACdD,QAAQ,EAAEA,QAAS;QACnBS,WAAW,EAAGC,UAAU,IAAK;UAC3B,IAAIA,UAAU,EAAEZ,MAAM,CAACa,OAAO,CAACX,QAAQ,CAAC,GAAGU,UAAU;QACvD,CAAE;QACFE,OAAO,EAAEA,CAAA,KACPb,iBAAiB,CAACC,QAAQ,EAAEC,OAAO,EAAEH,MAAM,CAACa,OAAO,CAACX,QAAQ,CAAC;MAC9D,GARIA,QAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA,CAACF,KAAK;MACJwB,IAAI,EAAEjB,IAAI,CAACG,UAAW;MACtBC,GAAG,EAAEJ,IAAI,CAACI,GAAI;MACdC,IAAI,EAAEL,IAAI,CAACK,IAAK;MAChBC,UAAU,EAAEN,IAAI,CAACM;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA,eACF,CAAC;AAEP;AAAC1B,EAAA,CA/CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}