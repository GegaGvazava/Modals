{"ast":null,"code":"var _jsxFileName = \"/Users/gegagvazava/Downloads/UseRef-modals-main/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [info, setInfo] = useState({\n    buttonName: \"\",\n    top: 0,\n    left: 0,\n    visibility: \"none\"\n  });\n  const btnRefs = useRef([]); // An array to store references to the buttons\n\n  const handleButtonClick = (btnIndex, btnName) => {\n    const btnElement = btnRefs.current[btnIndex]; // Get the button reference\n    const {\n      top,\n      left,\n      height\n    } = btnElement.getBoundingClientRect(); // Get the button's position\n\n    setInfo({\n      buttonName: btnName,\n      top: top + height,\n      // Position modal underneath the button\n      left: left,\n      // Align modal horizontally with the button\n      visibility: \"block\" // Show the modal\n    });\n  };\n  const btnNames = [\"First\", \"Second\", \"Third\", \"Fourth\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: btnNames.map((btnName, btnIndex) => /*#__PURE__*/_jsxDEV(Button, {\n        text: btnName,\n        onClick: () => handleButtonClick(btnIndex, btnName),\n        refFunction: refElement => {\n          if (refElement) btnRefs.current[btnIndex] = refElement; // Store the reference of each button\n        }\n      }, btnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      text: info.buttonName,\n      top: info.top,\n      left: info.left,\n      visibility: info.visibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UuSTr+35og6pLWCXITpZiEadkIA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Button","Modal","jsxDEV","_jsxDEV","App","_s","info","setInfo","buttonName","top","left","visibility","btnRefs","handleButtonClick","btnIndex","btnName","btnElement","current","height","getBoundingClientRect","btnNames","className","children","map","text","onClick","refFunction","refElement","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gegagvazava/Downloads/UseRef-modals-main/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\n\nfunction App() {\n  const [info, setInfo] = useState({\n    buttonName: \"\",\n    top: 0,\n    left: 0,\n    visibility: \"none\",\n  });\n\n  const btnRefs = useRef([]); // An array to store references to the buttons\n\n  const handleButtonClick = (btnIndex, btnName) => {\n    const btnElement = btnRefs.current[btnIndex]; // Get the button reference\n    const { top, left, height } = btnElement.getBoundingClientRect(); // Get the button's position\n\n    setInfo({\n      buttonName: btnName,\n      top: top + height, // Position modal underneath the button\n      left: left, // Align modal horizontally with the button\n      visibility: \"block\", // Show the modal\n    });\n  };\n\n  const btnNames = [\"First\", \"Second\", \"Third\", \"Fourth\"];\n\n  return (\n    <div className=\"App\">\n      <div className=\"button-container\">\n        {btnNames.map((btnName, btnIndex) => (\n          <Button\n            key={btnIndex}\n            text={btnName}\n            onClick={() => handleButtonClick(btnIndex, btnName)}\n            refFunction={(refElement) => {\n              if (refElement) btnRefs.current[btnIndex] = refElement; // Store the reference of each button\n            }}\n          />\n        ))}\n      </div>\n      <Modal\n        text={info.buttonName}\n        top={info.top}\n        left={info.left}\n        visibility={info.visibility}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAC/BU,UAAU,EAAE,EAAE;IACdC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAGb,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5B,MAAMc,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;IAC/C,MAAMC,UAAU,GAAGJ,OAAO,CAACK,OAAO,CAACH,QAAQ,CAAC,CAAC,CAAC;IAC9C,MAAM;MAAEL,GAAG;MAAEC,IAAI;MAAEQ;IAAO,CAAC,GAAGF,UAAU,CAACG,qBAAqB,CAAC,CAAC,CAAC,CAAC;;IAElEZ,OAAO,CAAC;MACNC,UAAU,EAAEO,OAAO;MACnBN,GAAG,EAAEA,GAAG,GAAGS,MAAM;MAAE;MACnBR,IAAI,EAAEA,IAAI;MAAE;MACZC,UAAU,EAAE,OAAO,CAAE;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMS,QAAQ,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;EAEvD,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BF,QAAQ,CAACG,GAAG,CAAC,CAACR,OAAO,EAAED,QAAQ,kBAC9BX,OAAA,CAACH,MAAM;QAELwB,IAAI,EAAET,OAAQ;QACdU,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACC,QAAQ,EAAEC,OAAO,CAAE;QACpDW,WAAW,EAAGC,UAAU,IAAK;UAC3B,IAAIA,UAAU,EAAEf,OAAO,CAACK,OAAO,CAACH,QAAQ,CAAC,GAAGa,UAAU,CAAC,CAAC;QAC1D;MAAE,GALGb,QAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5B,OAAA,CAACF,KAAK;MACJuB,IAAI,EAAElB,IAAI,CAACE,UAAW;MACtBC,GAAG,EAAEH,IAAI,CAACG,GAAI;MACdC,IAAI,EAAEJ,IAAI,CAACI,IAAK;MAChBC,UAAU,EAAEL,IAAI,CAACK;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CA9CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}